# Generated by Django 5.0.6 on 2024-05-19 21:06

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Loot',
            fields=[
                ('inGameId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('ilvl', models.IntegerField(verbose_name='Niveau item')),
                ('gameSlot', models.IntegerField(verbose_name='Slot')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Joueur')),
                ('discordTag', models.CharField(max_length=40, unique=True, verbose_name='Tag discord')),
                ('isOfficier', models.BooleanField(default=False, verbose_name='Officier')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Nom du personnage')),
                ('level', models.IntegerField(verbose_name='Niveau')),
                ('ilvl', models.IntegerField(verbose_name="Niveau d'item")),
                ('race', models.CharField(choices=[('UNDEAD', 'Mort Vivant'), ('TROLL', 'Troll'), ('TAUREN', 'Tauren'), ('ORC', 'Orc'), ('GOBELIN', 'Gobelin'), ('BLOODELF', 'Elf de Sang')], default='ORC', max_length=20, verbose_name='Race')),
                ('classe', models.CharField(choices=[('DK', 'Chevalier de la mort'), ('DRUID', 'Druide'), ('HUNTER', 'Chasseur'), ('MAGE', 'Mage'), ('PALADIN', 'Paladin'), ('PRIEST', 'Pretre'), ('ROGUE', 'Voleur'), ('SHAMAN', 'Chaman'), ('WARLOCK', 'Demoniste'), ('WARRIOR', 'Guerrier')], default='MAGE', max_length=20, verbose_name='Classe')),
                ('specMain', models.CharField(choices=[('CAC', 'DPS Corps à Corps'), ('DISTANT', 'DPS Distant'), ('HEAL', 'Soigneur'), ('TANK', 'Tank')], default='DISTANT', max_length=20, verbose_name='Spécialisation principale')),
                ('specAlt', models.CharField(choices=[('CAC', 'DPS Corps à Corps'), ('DISTANT', 'DPS Distant'), ('HEAL', 'Soigneur'), ('TANK', 'Tank')], default='DISTANT', max_length=20, verbose_name='Spécialisation secondaire')),
                ('playerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='epgp.player', verbose_name='Nom du Joueur')),
            ],
        ),
        migrations.CreateModel(
            name='Raid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('played_at', models.DateField(default=datetime.datetime.now, verbose_name='Date')),
                ('instance', models.CharField(choices=[('ICC', 'Icecrown Citadel'), ('BARADIN', 'Baradin Hold'), ('BASTION', 'Bastion of Twilight'), ('THRONE', 'Throne of the Four Winds'), ('FIRELAND', 'Firelands'), ('DRAGON', 'Dragon Soul'), ('AUTRE', 'Autre')], default='BARADIN', max_length=20, verbose_name='Instance')),
                ('warcraftLogs', models.URLField(blank=True, null=True, verbose_name='URL Warcraft Logs')),
                ('commentaire', models.CharField(blank=True, max_length=200, null=True, verbose_name='Commentaire')),
                ('participants', models.ManyToManyField(related_name='participant', to='epgp.character', verbose_name='Participants')),
            ],
        ),
        migrations.CreateModel(
            name='EPGPLogEntry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créée le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('type', models.CharField(choices=[('NEWPLAYER', 'Nouveau Joueur'), ('DECAY', 'Decay'), ('DOCKEP', 'Pénalité EP'), ('DOCKGP', 'Pénalité GP'), ('LOOT', 'Loot'), ('PARTICIPATE', 'Participation'), ('STANDBY', 'Bench'), ('OTHER', 'Autre')], default='LOOT', max_length=20, verbose_name='Type')),
                ('reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='Raison')),
                ('ep_delta', models.IntegerField(verbose_name='Modification en EP')),
                ('gp_delta', models.IntegerField(verbose_name='Modification en GP')),
                ('canceled', models.BooleanField(default=False, verbose_name='Validité')),
                ('canceled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_canceled_by', to=settings.AUTH_USER_MODEL, verbose_name='Annulé par')),
                ('user_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='player_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Attributeur')),
                ('loot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loot', to='epgp.loot')),
                ('target_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_target_player', to='epgp.player', verbose_name='Joueur')),
                ('raid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='raid_raid', to='epgp.raid', verbose_name='Raid')),
            ],
        ),
    ]
